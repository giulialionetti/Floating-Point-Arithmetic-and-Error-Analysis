% Run your tests here
FastTwoSum_test
diary off
% Test 1: Basic correctness
a = 1.0;
b = eps;
[x, y] = FastTwoSum(a, b);
exact_sum = a + b;
reconstructed = x + y;
% Should be: reconstructed == exact (in higher precision sense)

% Test 2: Verify error bound
% |y| should be <= u * |x|
u = eps/2;
error_ratio = abs(y) / abs(x);
% Should satisfy: error_ratio <= u

% Test 3: Magnitude difference matters
a = 1e16;
b = 1.0;
% b gets "lost" in rounding, y should capture it

% Test 4: Violation of precondition
a = 1.0;
b = 1e10;  % |b| > |a| - WRONG!
% This should give incorrect results
FastTwoSum_test
diary off
FastTwoSum_test
========================================================================
FastTwoSum Algorithm Test Suite
Error-Free Transformation for Addition with |a| >= |b|
========================================================================

Machine epsilon (eps): 2.2204e-16
Unit roundoff (u):     1.1102e-16

Test 1: Exactness - Verify a + b = x + y
--------------------------------------------------------------------
  a                  b                  |a+b - (x+y)|   Exact?
--------------------------------------------------------------------
  1.0000e+00     1.1102e-16     0.0000e+00       ✓
  1.0000e+00     1.0000e-10     0.0000e+00       ✓
  1.0000e+10     1.0000e+00     0.0000e+00       ✓
  1.0000e+00     2.2204e-16     0.0000e+00       ✓
  1.0000e+02     1.0000e-14     0.0000e+00       ✓

✓ Test 1 PASSED: All cases exact (a + b = x + y)

Test 2: Error Bound - Verify |y| <= u|x|
--------------------------------------------------------------------
  a              b              |y|          u|x|         |y|/(u|x|)  OK?
-------------------------------------------------------------------------------
  1.0000e+00   2.2204e-16   0.0000e+00   1.1102e-16   0.000000   ✓
  1.0000e+00   1.1102e-16   1.1102e-16   1.1102e-16   1.000000   ✓
  1.0000e+02   1.0000e-14   4.2109e-15   1.1102e-14   0.379280   ✓
  1.0000e+05   1.0000e-10   1.8634e-12   1.1102e-11   0.167841   ✓
  1.0000e+00   1.0000e-01   8.3267e-17   1.2212e-16   0.681818   ✓

✓ Test 2 PASSED: Error bound satisfied for all cases

Test 3: Rounding Error Detection
--------------------------------------------------------------------
  a          b          x              y              Rounding?
--------------------------------------------------------------------
  1.0000   0.500000   1.5000000000000000e+00   0.0000e+00   No 
  1.0000   0.250000   1.2500000000000000e+00   0.0000e+00   No 
  1.0000   0.100000   1.1000000000000001e+00   8.3267e-17   Yes
  1.0000   0.000000   1.0000000000000000e+00   1.1102e-16   Yes
  1.0000   0.333333   1.3333333333333333e+00   5.5511e-17   Yes

Observation: y ≠ 0 when rounding occurs in fl(a+b)
y captures the exact rounding error!

Test 4: Large Magnitude Difference (a >> b)
--------------------------------------------------------------------
When a >> b, we expect: x ≈ a (b lost in rounding), y ≈ b (captures loss)

  a              b          x              y          y/b       Lost?
-------------------------------------------------------------------------------
  1.0000e+16   1.0000e+00   1.0000000000000000e+16   1.0000e+00   1.000000   Yes
  1.0000e+20   1.0000e+00   1.0000000000000000e+20   1.0000e+00   1.000000   Yes
  1.0000e+10   1.0000e-06   1.0000000000000002e+10   -9.0735e-07   -0.907349   No 
  1.0000e+15   1.0000e+01   1.0000000000000100e+15   0.0000e+00   0.000000   No 

Observation: When a >> b, the value b is lost in fl(a+b),
but y captures it exactly. No information is lost!

Test 5: Precondition Violation - What if |a| < |b|?
--------------------------------------------------------------------
WARNING: FastTwoSum REQUIRES |a| >= |b|

Case 1: CORRECT order (|a| >= |b|)
  a = 1.0000e+10, b = 1.0000e+00
  x = 1.0000000001000000e+10
  y = 0.0000000000000000e+00
  |a+b - (x+y)| = 0.0000e+00  ✓ EXACT

Case 2: WRONG order (|a| < |b|) - Precondition VIOLATED!
  a = 1.0000e+00, b = 1.0000e+10
  x = 1.0000000001000000e+10
  y = 0.0000000000000000e+00
  |a+b - (x+y)| = 0.0000e+00  ✗ NOT EXACT!

⚠ Test 5: Results may vary

Test 6: Comparison with Direct Computation
--------------------------------------------------------------------
a = 1.0000000000000000e+00
b = 1.1102230246251565e-16

Direct computation:
  fl(a + b) = 1.0000000000000000e+00
  Information lost: Cannot recover exact a + b

With FastTwoSum:
  x = 1.0000000000000000e+00
  y = 1.1102230246251565e-16
  x + y = 1.0000000000000000e+00 (exact a + b)
  No information lost!

Test 7: Edge Cases
--------------------------------------------------------------------
  Case                a              b              x              y
-------------------------------------------------------------------------------
  Same values         1.0000e+00   1.0000e+00   2.0000e+00   0.0000e+00
  With zero           1.0000e+00   0.0000e+00   1.0000e+00   0.0000e+00
  Both negative       -1.0000e+00   -2.2204e-16   -1.0000e+00   0.0000e+00
  Opposite signs      1.0000e+00   -5.0000e-01   5.0000e-01   0.0000e+00
  Very small          2.2204e-16   1.1102e-16   3.3307e-16   0.0000e+00

========================================================================
Summary
========================================================================
FastTwoSum Properties Verified:
1. ✓ Exactness: a + b = x + y (no information lost)
2. ✓ Error bound: |y| <= u|x| (theorem from slides)
3. ✓ Error detection: y captures exact rounding error
4. ✓ Large magnitude: y recovers values lost in fl(a+b)
5. ✓ Precondition: MUST have |a| >= |b| for correctness
6. ✓ Advantage: Preserves full precision vs direct computation

Cost: 3 flops (vs 6 flops for TwoSum without precondition)
========================================================================
diary off
